{"version":3,"file":"static/js/419.0966c2de.chunk.js","mappings":"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","sources":["components/UsersList/UsersList.styled.js","api/Api.jsx","components/ButtonLoadMore/ButtonLoadMore.styled.js","components/ButtonLoadMore/ButtonLoadMore.jsx","components/UserListItem/UserListItem.styled.js","components/UserListItem/UserListItem.jsx","components/UsersList/UsersList.jsx","pages/Tweets/Tweets.styled.js","components/Select/Select.jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const UserList = styled.ul`\n  display: flex;\n  flex-direction: column;\n\n  gap: 30px;\n  list-style: none;\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const UserCard = styled.li`\n  position: relative;\n  width: 380px;\n  height: 460px;\n\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://64555fddf803f345764185d1.mockapi.io\";\n\nexport const getUsers = async (page) => {\n  const response = await axios.get(`/users/?page=${page}&limit=3`);\n  return response.data;\n};\n\nexport const updateUsersData = async (id, { check, followers }) => {\n  const response = await axios.put(`users/${id}`, { check, followers });\n  return response.data;\n};\n","import styled from \"styled-components\";\n\nexport const BtnLoadMore = styled.button`\n  margin: 10px auto;\n  padding: 8px 16px;\n  border-radius: 5px;\n  background-color: #3b83bd;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: none;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  width: 130px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { BtnLoadMore } from \"./ButtonLoadMore.styled\";\n\nexport const ButtonLoadMore = ({ onClickButton }) => {\n  return (\n    <BtnLoadMore type=\"button\" onClick={() => onClickButton()}>\n      Load more\n    </BtnLoadMore>\n  );\n};\n\nButtonLoadMore.propTypes = {\n  onClickButton: PropTypes.func.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const LogoGoIt = styled.img`\n  position: absolute;\n  width: 76px;\n  height: 22px;\n  left: 20px;\n  top: 20px;\n`;\n\nexport const LogoImg = styled.img`\n  width: 308px;\n  height: 168px;\n  margin: 28px auto 18px auto;\n`;\n\nexport const UserLine = styled.div`\n  width: 380px;\n  height: 8px;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const WrapperUserAvatar = styled.div`\n  position: absolute;\n  left: 150px;\n  top: 178px;\n  width: 80px;\n  height: 80px;\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 85.9232px;\n`;\n\nexport const UserAvatar = styled.img`\n  position: absolute;\n  left: 9.48px;\n  top: 9.42px;\n  width: 62px;\n  height: 62px;\n  border-radius: 50%;\n`;\n\nexport const UserTweets = styled.p`\n  font-family: \"Montserrat\", sans-serif;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  text-align: center;\n  color: #ebd8ff;\n  margin: 62px auto 0px auto;\n`;\n\nexport const UserFollowers = styled.p`\n  font-family: \"Montserrat\", sans-serif;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #ebd8ff;\n  text-align: center;\n  margin: 16px auto 0px auto;\n`;\n\nexport const ButtonFollow = styled.button`\n  font-family: \"Montserrat\", sans-serif;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.22;\n  text-transform: uppercase;\n  color: #373737;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 26px auto 36px auto;\n  padding: 14px 28px;\n  width: 196px;\n  height: 50px;\n  border: none;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n`;\n","import logo from \"../../images/logo.png\";\nimport logoGoIt from \"../../images/goit.png\";\nimport { useState } from \"react\";\nimport { updateUsersData } from \"../../api/Api\";\nimport {\n  ButtonFollow,\n  LogoGoIt,\n  LogoImg,\n  UserAvatar,\n  UserFollowers,\n  UserLine,\n  UserTweets,\n  WrapperUserAvatar,\n} from \"./UserListItem.styled\";\nimport PropTypes from \"prop-types\";\n\nconst UserListItem = (user) => {\n  const { id, avatar, tweets, followers, check } = user.user;\n\n  const [selection, setSelection] = useState(check);\n  const [followersCount, setFollowersCount] = useState(followers);\n\n  const handleFollowClick = () => {\n    setSelection(!selection);\n\n    if (selection) {\n      updateUsersData(id, {\n        check: !selection,\n        followers: followersCount - 1,\n      });\n      setFollowersCount(followersCount - 1);\n    }\n    if (!selection) {\n      updateUsersData(id, {\n        check: !selection,\n        followers: followersCount + 1,\n      });\n      setFollowersCount(followersCount + 1);\n    }\n  };\n\n  return (\n    <>\n      <LogoGoIt src={logoGoIt} alt=\"logoGoIt\" />\n      <LogoImg src={logo} alt=\"logo\" />\n      <UserLine></UserLine>\n      <WrapperUserAvatar>\n        <UserAvatar src={avatar} alt={user} />\n      </WrapperUserAvatar>\n      <UserTweets>{tweets} tweets</UserTweets>\n      <UserFollowers>\n        {followersCount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}{\" \"}\n        Followers\n      </UserFollowers>\n      <ButtonFollow\n        type=\"button\"\n        style={{ backgroundColor: selection ? \"#5CD3A8\" : \"#EBD8FF\" }}\n        onClick={() => handleFollowClick(id)}\n      >\n        {selection ? \"following\" : \"follow\"}\n      </ButtonFollow>\n    </>\n  );\n};\n\nexport default UserListItem;\n\nUserListItem.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    tweets: PropTypes.number.isRequired,\n    followers: PropTypes.number.isRequired,\n    check: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import { UserCard, UserList } from \"./UsersList.styled\";\nimport { useEffect, useState } from \"react\";\nimport { getUsers } from \"../../api/Api\";\nimport { ButtonLoadMore } from \"../ButtonLoadMore/ButtonLoadMore\";\nimport UserListItem from \"../UserListItem/UserListItem\";\nimport { Loader } from \"../Loader/Loader\";\nimport ScrollToTop from \"react-scroll-up\";\nimport { TfiArrowCircleUp } from \"react-icons/tfi\";\nimport toast from \"react-hot-toast\";\n\nconst UsersList = () => {\n  const [users, setUsers] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showLoadMoreBtn, setShowLoadMoreBtn] = useState(true);\n\n  useEffect(() => {\n    async function getAllUsers() {\n      try {\n        setIsLoading(true);\n        setShowLoadMoreBtn(false);\n        const response = await getUsers(page);\n        setShowLoadMoreBtn(true);\n\n        if (page === 1) {\n          setUsers(response);\n          setIsLoading(false);\n        } else {\n          setUsers((prev) => [...prev, ...response]);\n          setIsLoading(false);\n        }\n        if (response.length < 3) {\n          setShowLoadMoreBtn(false);\n          toast.success(`Tweets Cards are over`);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getAllUsers();\n  }, [page]);\n\n  const loadMoreCards = () => {\n    setPage((prev) => prev + 1);\n    setIsLoading(true);\n  };\n\n  return (\n    <>\n      <UserList>\n        {users.map((user) => (\n          <UserCard key={user.id}>\n            <UserListItem user={user} />\n          </UserCard>\n        ))}\n      </UserList>\n      {showLoadMoreBtn && <ButtonLoadMore onClickButton={loadMoreCards} />}\n      {isLoading && <Loader />}\n      <ScrollToTop\n        showUnder={160}\n        style={{\n          position: \"fixed\",\n          color: \"#D318FF\",\n          bottom: 50,\n          right: 30,\n          cursor: \"pointer\",\n          transitionDuration: \"0.2s\",\n          transitionTimingFunction: \"linear\",\n          transitionDelay: \"0s\",\n        }}\n      >\n        <span>\n          <TfiArrowCircleUp size=\"50\" />\n        </span>\n      </ScrollToTop>\n    </>\n  );\n};\n\nexport default UsersList;\n","import styled from \"styled-components\";\n\nexport const Section = styled.section`\n  width: 480px;\n  margin: 0 auto;\n  padding: 0px 15px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n  }\n`;\n\nexport const WrapperButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ButtonBack = styled.div`\n  font-family: \"Segoe UI\", sans-serif;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  width: 100px;\n  height: 30px;\n  padding: 5px;\n  margin-bottom: 10px;\n  font-weight: 500;\n  font-size: 18px;\n  color: #fff;\n  border-radius: 5px;\n  border-color: #007bff;\n  background-color: #3b83bd;\n  cursor: pointer;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    background-color: #6495ed;\n  }\n`;\n","import { useState } from \"react\";\n\nconst Select = () => {\n  const [selectedValue, setSelectedValue] = useState(\"\");\n\n  const options = [\n    { value: \"All\", label: \"All\" },\n    { value: \"Follow\", label: \"Follow\" },\n    { value: \"Followings\", label: \"Followings\" },\n  ];\n\n  const handleChange = (event) => {\n    setSelectedValue(event.target.value);\n    //   if (selectedValue===\"follow\")\n  };\n\n  return (\n    <div>\n      <select\n        value={selectedValue}\n        onChange={handleChange}\n        style={{\n          backgroundColor: \"#3b83bd\",\n          color: \"#fff\",\n          padding: \"4px\",\n          fontSize: \"16px\",\n          borderRadius: \"4px\",\n          border: \"none\",\n          width: \"120px\",\n          fontWeight: \"500\",\n        }}\n      >\n        {options.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n","import UsersList from \"../../components/UsersList/UsersList\";\nimport { ButtonBack, Section, WrapperButtons } from \"./Tweets.styled\";\nimport { HiArrowSmLeft } from \"react-icons/hi\";\nimport { useNavigate } from \"react-router-dom\";\nimport Select from \"../../components/Select/Select\";\n\nconst Tweets = () => {\n  const navigate = useNavigate();\n\n  const handleTweets = () => {};\n  return (\n    <main>\n      <Section>\n        <WrapperButtons>\n          <ButtonBack onClick={() => navigate(\"/\")}>\n            <HiArrowSmLeft size=\"20\" />\n            Go back\n          </ButtonBack>\n          <Select />\n        </WrapperButtons>\n        <UsersList tweets={handleTweets} />\n      </Section>\n    </main>\n  );\n};\n\nexport default Tweets;\n"],"names":["UserList","styled","_templateObject","_taggedTemplateLiteral","UserCard","_templateObject2","axios","getUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","response","wrap","_context","prev","next","concat","sent","abrupt","data","stop","_x","apply","arguments","updateUsersData","_ref3","_callee2","id","_ref2","check","followers","_context2","_x2","_x3","BtnLoadMore","ButtonLoadMore","onClickButton","_jsx","type","onClick","children","LogoGoIt","LogoImg","UserLine","_templateObject3","WrapperUserAvatar","_templateObject4","UserAvatar","_templateObject5","UserTweets","_templateObject6","UserFollowers","_templateObject7","ButtonFollow","_templateObject8","user","_user$user","avatar","tweets","_useState","useState","_useState2","_slicedToArray","selection","setSelection","_useState3","_useState4","followersCount","setFollowersCount","_jsxs","_Fragment","src","alt","logo","toString","replace","style","backgroundColor","users","setUsers","setPage","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","showLoadMoreBtn","setShowLoadMoreBtn","useEffect","_getAllUsers","_toConsumableArray","length","toast","t0","console","log","getAllUsers","map","UserListItem","Loader","ScrollToTop","showUnder","position","color","bottom","right","cursor","transitionDuration","transitionTimingFunction","transitionDelay","TfiArrowCircleUp","size","Section","WrapperButtons","ButtonBack","selectedValue","setSelectedValue","value","onChange","event","target","padding","fontSize","borderRadius","border","width","fontWeight","label","option","navigate","useNavigate","HiArrowSmLeft","Select","UsersList"],"sourceRoot":""}